/*********************************************************************
Figgy's Flower Fest

A mini game written by Alex Zaykowski for the Arduino Nano on a
128x64 i2C display

-for Kaitlyn

5/3/2021
*********************************************************************/

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);

#define NUMFLAKES 10
#define XPOS 0
#define YPOS 1
#define DELTAY 2

#define right 5
#define left 7
int score = 0;
boolean rightState;
boolean leftState;
boolean lastPressed;
boolean gameOver = 0;
int x = 0;
int y = 48;

// snow (setting y below 0 doesn't do anything I think)
int snowX[]= {random(0, 128), random(0, 128), random(0, 128), random(0, 128)};
int snowY[] = {random(0, -100), random(0, -130), random(0, -310), random(0, -200)};

#define LOGO16_GLCD_HEIGHT 16 
#define LOGO16_GLCD_WIDTH  16 

#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

const unsigned char PROGMEM launch_img [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x00, 0x41, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0x08, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0x00, 0x01, 0xC8, 0x06, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
0x03, 0x01, 0xC1, 0x6C, 0x86, 0x00, 0x8D, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x00,
0x0F, 0xE3, 0x43, 0x26, 0x83, 0x80, 0x85, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00,
0x03, 0x0A, 0x42, 0x23, 0x81, 0x80, 0x81, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x00, 0x00,
0x02, 0x0A, 0x63, 0x61, 0x87, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x43, 0xC7, 0x30, 0x00, 0x00,
0x03, 0x0B, 0xE1, 0xE0, 0x80, 0x07, 0xE1, 0x00, 0x00, 0x03, 0x81, 0xFA, 0x44, 0x10, 0x00, 0x00,
0x01, 0x08, 0x20, 0x21, 0x00, 0x00, 0x82, 0x32, 0x09, 0xE6, 0x40, 0x43, 0xC6, 0x3C, 0x00, 0x00,
0x01, 0x00, 0x20, 0x21, 0x00, 0x00, 0x82, 0x7A, 0x49, 0xE6, 0x00, 0x62, 0x03, 0x70, 0x00, 0x00,
0x01, 0x00, 0xA0, 0xA1, 0x00, 0x00, 0x82, 0x4A, 0xE9, 0x04, 0x00, 0x22, 0x21, 0x10, 0x00, 0x00,
0x01, 0x80, 0xE0, 0xE1, 0x00, 0x00, 0xC6, 0x5B, 0xB1, 0x04, 0x00, 0x23, 0xEF, 0x18, 0x00, 0x00,
0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x44, 0x70, 0x01, 0xC0, 0x00, 0x20, 0x00, 0x08, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE4, 0x00, 0x00, 0x00, 0x20, 0x3C, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFD, 0xE0, 0x00, 0x00, 0x3D, 0xFF, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x1F, 0xFC, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x3C, 0x00, 0x07, 0xFE, 0x00, 0x40, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x70, 0x00, 0x0F, 0x00, 0x7F, 0xF8, 0x00, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x70, 0x00, 0x03, 0x80, 0xFF, 0xF0, 0x00, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7E, 0x84, 0x00, 0x38, 0x00, 0x01, 0xC7, 0xFC, 0x00, 0x01, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x43, 0x8C, 0x00, 0x18, 0x00, 0x3F, 0xFF, 0xF0, 0x00, 0x01, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x61, 0x38, 0x00, 0x3C, 0x00, 0x60, 0x00, 0x0C, 0x00, 0x01, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3C, 0x1C, 0x00, 0x1C, 0x01, 0x80, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3C, 0xC7, 0x00, 0x1E, 0x01, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x61, 0xC1, 0x00, 0x1E, 0x02, 0x00, 0x00, 0x01, 0x80, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xC1, 0xDF, 0x00, 0x1F, 0x02, 0x00, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0x34, 0x00, 0x07, 0x82, 0x00, 0x00, 0x00, 0x60, 0x0F, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFF, 0x92, 0x70, 0x07, 0x84, 0x00, 0x00, 0x00, 0x20, 0x0F, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0xF8, 0x07, 0xC4, 0x10, 0x00, 0x00, 0x30, 0x1E, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xD3, 0xFC, 0x00, 0xE4, 0x00, 0x00, 0x00, 0x10, 0x3F, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xFC, 0x01, 0xF4, 0x00, 0x00, 0x08, 0x10, 0x7D, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x18, 0xF4, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x78, 0x00, 0x00, 0x00, 0x0B, 0xD0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x6E, 0x00, 0x38, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00,
0x00, 0x82, 0x02, 0x40, 0x00, 0x00, 0x2F, 0x00, 0x18, 0x08, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00,
0x01, 0x82, 0x71, 0xC0, 0x00, 0x00, 0x37, 0x80, 0x08, 0x0C, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,
0x01, 0x42, 0x51, 0x80, 0x00, 0x00, 0x11, 0xC0, 0x08, 0x04, 0x03, 0x00, 0x08, 0x00, 0x00, 0x00,
0x71, 0x22, 0x70, 0xC0, 0x00, 0x00, 0x18, 0xF0, 0x08, 0x02, 0x02, 0x00, 0x08, 0x00, 0x00, 0x00,
0x01, 0x72, 0x68, 0xE0, 0x00, 0x00, 0x18, 0x38, 0x08, 0x03, 0xFE, 0x00, 0x08, 0x00, 0x00, 0x00,
0x01, 0xD1, 0x39, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
0x01, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0C, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
0x01, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x84, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC7, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x80, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM win_img [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x24, 0x00, 0x00, 0x00, 0x00, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x0C, 0x00, 0x70, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x08, 0x00, 0x7F, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x20, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x08, 0x00, 0x41, 0x80, 0x08, 0x09, 0xC8, 0x40, 0x09, 0xF0, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x0C, 0x00, 0x80, 0x80, 0x3F, 0x09, 0x68, 0x4F, 0x9D, 0x00, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x07, 0xC0, 0x80, 0xC0, 0x08, 0x11, 0x2B, 0x58, 0xB7, 0x80, 0x88, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x40, 0x80, 0x40, 0x08, 0x11, 0x6B, 0x9F, 0xB0, 0xC0, 0x08, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x40, 0xC0, 0x80, 0x08, 0x11, 0xCB, 0x90, 0x30, 0x60, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x40, 0x63, 0x80, 0x08, 0x10, 0x0E, 0x1F, 0x13, 0xE0, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x30, 0xC0, 0x3E, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x80, 0x00,
0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x30, 0xCC, 0x80, 0x09, 0x09, 0x20, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE1, 0xC8, 0x80, 0x09, 0x88, 0x3C, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x82, 0x49, 0x80, 0x09, 0x89, 0x24, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0xC9, 0x00, 0x07, 0x91, 0x26, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0x00, 0x06, 0xD1, 0x26, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC8, 0x00, 0x00, 0x00, 0x40, 0x79, 0x80, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFB, 0xC0, 0x00, 0x00, 0x7B, 0xFF, 0x80, 0x00, 0xE0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xF8, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x03, 0xB0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x78, 0x00, 0x0F, 0xFC, 0x00, 0x80, 0x02, 0x10, 0x00,
0x00, 0x00, 0x01, 0xF8, 0x00, 0xE0, 0x00, 0x1E, 0x00, 0xFF, 0xF0, 0x01, 0x80, 0x02, 0x08, 0x00,
0x00, 0x00, 0x01, 0x08, 0x00, 0xE0, 0x00, 0x07, 0x01, 0xFF, 0xE0, 0x01, 0x81, 0xC2, 0x08, 0x00,
0x00, 0x00, 0xFD, 0x08, 0x00, 0x70, 0x00, 0x03, 0x8F, 0xF8, 0x00, 0x03, 0x83, 0x72, 0x08, 0x00,
0x00, 0x00, 0x87, 0x18, 0x00, 0x30, 0x00, 0x7F, 0xFF, 0xE0, 0x00, 0x03, 0x82, 0x1E, 0x08, 0x00,
0x00, 0x00, 0xC2, 0x70, 0x00, 0x78, 0x00, 0xC0, 0x00, 0x18, 0x00, 0x03, 0x83, 0x00, 0x18, 0x00,
0x00, 0x00, 0x78, 0x38, 0x00, 0x38, 0x03, 0x00, 0x00, 0x0C, 0x00, 0x06, 0x01, 0x03, 0x10, 0x00,
0x00, 0x00, 0x79, 0x8E, 0x00, 0x3C, 0x02, 0x00, 0x00, 0x06, 0x00, 0x06, 0x01, 0x9D, 0xDC, 0x00,
0x00, 0x00, 0xC3, 0x82, 0x00, 0x3C, 0x04, 0x00, 0x00, 0x03, 0x00, 0x0E, 0x00, 0xD0, 0xC6, 0x00,
0x00, 0x01, 0x83, 0xBE, 0x00, 0x3E, 0x04, 0x00, 0x00, 0x01, 0x80, 0x0E, 0x01, 0xC8, 0x42, 0x00,
0x00, 0x01, 0x00, 0x68, 0x00, 0x0F, 0x04, 0x00, 0x00, 0x00, 0xC0, 0x1E, 0x07, 0x08, 0x82, 0x00,
0x00, 0x01, 0xFF, 0x24, 0xE0, 0x0F, 0x08, 0x00, 0x00, 0x00, 0x40, 0x1E, 0x04, 0x07, 0x62, 0x00,
0x00, 0x00, 0x01, 0x27, 0xF0, 0x0F, 0x88, 0x10, 0x00, 0x08, 0x60, 0x3C, 0x04, 0x30, 0x72, 0x00,
0x00, 0x00, 0x01, 0xA7, 0xF8, 0x01, 0xC8, 0x00, 0x00, 0x00, 0x20, 0x7E, 0x06, 0xE0, 0xDE, 0x00,
0x00, 0x00, 0x00, 0xEF, 0xF8, 0x03, 0xE8, 0x00, 0x00, 0x00, 0x20, 0xFA, 0x03, 0xE0, 0x80, 0x00,
0x00, 0x00, 0x00, 0x07, 0xF8, 0x01, 0xF0, 0x03, 0xFF, 0xF0, 0x31, 0xE8, 0x00, 0xB0, 0x80, 0x00,
0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0xF0, 0x02, 0x00, 0x10, 0x17, 0xA0, 0x01, 0x8F, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0xDC, 0x00, 0x70, 0x02, 0x00, 0x10, 0x1F, 0x00, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x5E, 0x00, 0x30, 0x02, 0x00, 0x30, 0x1C, 0x00, 0x01, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x6F, 0x00, 0x10, 0x03, 0x00, 0x20, 0x14, 0x00, 0x0F, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x23, 0x80, 0x10, 0x01, 0x00, 0x20, 0x10, 0x00, 0x0F, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x31, 0xE0, 0x10, 0x01, 0x80, 0x60, 0x10, 0x00, 0x7F, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x30, 0x70, 0x10, 0x00, 0x81, 0xC0, 0x10, 0x03, 0xFF, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x10, 0x00, 0xFF, 0x00, 0x10, 0x3F, 0xCF, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x18, 0x00, 0x00, 0x00, 0x11, 0xFC, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x00, 0x00, 0x00, 0x3F, 0xF0, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8E, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF3, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
};

const unsigned char PROGMEM pooped [] = {
0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x41, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x40, 0x40, 0x41, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x08, 0x00, 0x00, 0xE0, 0x00, 0x60, 0x40, 0x41, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x18, 0x00, 0xFB, 0xB8, 0xE0, 0xE0, 0x40, 0x40, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0xF8, 0x8B, 0x0D, 0xE3, 0x60, 0x40, 0x40, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x88, 0x89, 0x05, 0xC2, 0x70, 0x40, 0x00, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0x08, 0xD9, 0xFD, 0x02, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x71, 0x01, 0x02, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0xF0, 0x01, 0x81, 0xF3, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x36, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x02, 0x22, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x02, 0x26, 0x30, 0x00, 0x02, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1C, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x83, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x00, 0x00,
0x00, 0x00, 0x01, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xC0, 0x80, 0x00, 0x00,
0x00, 0x00, 0xE1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4E, 0x43, 0x80, 0x00, 0x00,
0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x05, 0x5C, 0x62, 0x00, 0x00, 0x00,
0x00, 0x18, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0xE5, 0x4A, 0x20, 0x00, 0x00, 0x00,
0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0xA7, 0xCE, 0x00, 0x00, 0x00, 0x00,
0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x75, 0xA6, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x02, 0x60, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00,
0xFC, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x03, 0x00, 0xF0, 0x00, 0x00,
0x5E, 0x04, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x01, 0x80, 0x00, 0x00,
0x67, 0xE4, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00,
0x61, 0xF7, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x3F, 0x80, 0x00,
0x70, 0x78, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0xFF, 0x80, 0x00,
0x38, 0x3E, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0xE4, 0x80, 0x00,
0x19, 0xFF, 0xE0, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x34, 0x80, 0x00,
0x1F, 0x08, 0x30, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x15, 0x80, 0x00,
0x0E, 0x00, 0x18, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x15, 0x00, 0x00,
0x02, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x11, 0x00, 0x00,
0x02, 0x04, 0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x09, 0x00, 0x00,
0x02, 0x04, 0x09, 0xFF, 0xF0, 0x01, 0x00, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0x00, 0x0F, 0x00, 0x00,
0x02, 0x04, 0x1F, 0xE0, 0x1F, 0x01, 0x00, 0x00, 0x20, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x04, 0x18, 0x10, 0x01, 0xFF, 0x00, 0x00, 0x38, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x00, 0x10, 0x10, 0x00, 0xC0, 0x00, 0x00, 0x10, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0x08, 0x10, 0x18, 0x00, 0xE0, 0x00, 0x00, 0x10, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x1F, 0x08, 0x10, 0x08, 0x00, 0xB0, 0x00, 0x00, 0x10, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3C, 0x88, 0x10, 0x0C, 0x00, 0x98, 0x00, 0x00, 0x10, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0xF8, 0xC0, 0x10, 0x04, 0x00, 0x8C, 0x00, 0x00, 0x10, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0xF0, 0x60, 0x3E, 0x00, 0x01, 0x84, 0x00, 0x0F, 0x18, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x70, 0x38, 0x61, 0xFF, 0xFF, 0x86, 0x00, 0x06, 0x0F, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x20, 0xFF, 0xC0, 0x30, 0x00, 0xC2, 0x00, 0x00, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x67, 0xC0, 0x00, 0x10, 0x00, 0x62, 0x03, 0x30, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x7D, 0xC0, 0x00, 0x10, 0x00, 0x3F, 0x01, 0xF1, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x38, 0x00, 0x00, 0x10, 0x01, 0xF0, 0x00, 0x40, 0x71, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM figgy_right [] = {
0x08, 0x00, 0x0C, 0x00, 0x0F, 0x00, 0x1F, 0x80, 0x1E, 0x80, 0x1F, 0x80, 0x1F, 0x80, 0x0F, 0x22,
0x8F, 0xE2, 0x4F, 0x22, 0x4F, 0xE2, 0x2F, 0x3E, 0x1F, 0x00, 0x0F, 0x00, 0x09, 0x00, 0x0D, 0x80
};
const unsigned char PROGMEM figgy_left[] = {
0x00, 0x10, 0x00, 0x30, 0x00, 0xF0, 0x01, 0xF8, 0x01, 0x78, 0x01, 0xF8, 0x01, 0xF8, 0x44, 0xF0,
0x47, 0xF1, 0x44, 0xF2, 0x47, 0xF2, 0x7C, 0xF4, 0x00, 0xF8, 0x00, 0xF0, 0x00, 0x90, 0x01, 0xB0
};

void setup()   {      
  pinMode(right, INPUT_PULLUP);  
  pinMode(left, INPUT_PULLUP); 
  Serial.begin(9600);

  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3C (for the 128x32)
  // init done
  display.drawBitmap(0, 0,  launch_img, 128, 164, WHITE);
  display.display();
  delay(7000);
  display.clearDisplay();
}
void drawFiggyRight(){
    display.drawBitmap(x, y,  figgy_right, 16, 16, WHITE);
}
void drawFiggyLeft(){
    display.drawBitmap(x, y,  figgy_left, 16, 16, WHITE);
}
void displayScore(){
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.print("Score: ");
  display.setCursor(50,0);
  display.print(score);
}
void displayGameOver(){
  display.clearDisplay();
  for(;;){
    display.drawBitmap(0, 0,  pooped, 128, 164, WHITE);
    display.display();
  }
}
void displayWin(){
  if(gameOver = 1){
    display.clearDisplay();
    display.drawBitmap(0, 0,  win_img, 128, 164, WHITE);
    display.display();
    delay(7000);
  }
}
boolean hitTest(int i){
  if(snowX[i] > x && snowX[i] < x+16 && snowY[i]>= 48 && snowY[i] < 64){
    score += 1;
    return 1;
  }else{
    return 0;
  }
}
void drawPetals(){
    for(int i=0; i<4; i++){
      if(snowY[i] > 64 || hitTest(i)==1){
        snowX[i] = random(0, 128);
        snowY[i] = random(0, -300);
      }
      snowY[i] += random(1,3);
      display.drawPixel(snowX[i], snowY[i], WHITE);
  }
}
void loop() {
  // if game is won
  if(score == 50 && gameOver == 0){
    displayWin();
    gameOver = 1;
  }
  if(score == 100 && gameOver == 1){
    displayGameOver();
  }
  rightState = digitalRead(right);
  leftState = digitalRead(left);
  displayScore();
  
  drawPetals();
  
  if(rightState == 0){
    if(x < 112){
      x+=3;
    }
    lastPressed = 0;
    drawFiggyRight();
  }else if(leftState == 0){
    if(x > 3){
        x-=3;
    }
    lastPressed = 1;
    drawFiggyLeft();
  }else{
    if(lastPressed == 0){
      drawFiggyRight();
    }else{
      drawFiggyLeft();
    }
  }
  display.display();
  display.clearDisplay();
}
